#!/usr/bin/python

from sys import exit
import numpy as np
from optparse import OptionParser
import pyfits
import matplotlib.pyplot as plt

if __name__ == "__main__":
	bins = 20000
	usage = "pixelhist.py [options] infile"
	parser = OptionParser(usage=usage)
	(options, args) = parser.parse_args()
	if len(args) < 1:
		print "insufficient arguments. Use --help for options"
		exit(1)
	file = pyfits.open(args[0])
	scale = file[0].header["BSCALE"]
	zero = file[0].header["BZERO"]
	data = np.array([zero + (pix * scale) for pix in file[0].data.flatten()])
	nc = lambda x: not np.isnan(x)
	data = filter(nc, data)
	(hist, range) = np.histogram(data, bins=bins, new=True)
	range = range[0:-1]
	#Use a log of the Pixel numbers
	hist = np.log10(hist)
	yscale = np.max(hist)
	xscale = range[np.where(hist==yscale)]
	rice = open("Rice_HR.dat").readlines()
	xrice = [float(i.split()[0])*xscale for i in rice]
	yrice = [float(i.split()[1]) for i in rice]
	yscale = 10**yscale / np.max(yrice)
	yrice = np.log10([i * yscale for i in yrice])
	plt.bar(range, hist, width=range[1]-range[0])
	plt.title(args[0])
	#plt.plot(xrice, yrice, 'r')
	plt.axvline(color='r')
	plt.ylim((0,5.5))
	#PI range
	#plt.xlim((0,0.005))
	#I range
	plt.xlim((-0.01,0.01))
	plt.ylabel("Log_10 Pixel Count")
	plt.xlabel(file[0].header["BUNIT"])
	plt.show()
